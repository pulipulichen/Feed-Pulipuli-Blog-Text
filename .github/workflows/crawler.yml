name: Crawler
on: 
  push:
  schedule:
    - cron:  "0 9 * * *" # 要用臺灣時間減8小時
  workflow_dispatch:
permissions:
  contents: write
jobs:
  build-and-deploy:
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.
    runs-on: ubuntu-20.04
    steps:
      # ----------------------------------------------------------------
      
      - name: Checkout 🛎️
        uses: actions/checkout@v3
      # ----------------------------------------------------------------

      # - uses: satackey/action-docker-layer-caching@v0.0.11
      #   # Ignore the failure of a step and avoid terminating the job.
      #   continue-on-error: true

      # ----------------------------------------------------------------

      - name: Cache
        id: cache
        uses: actions/cache@v3
        env:
          cache-name: cache
        with:
          path: |
            cache
            output
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # - name: Cache Output
      #   id: cache-output
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: cache-output
      #   with:
      #     path: output
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('output/trigger.txt') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-

      # ----------------------------------------------------------------

      # - name: Clean Cache
      #   run: |
      #     rm -rf /output/*
      #     rm -rf /cache/*
      #     docker rmi -f $(docker images -aq)
      #     docker network prune -f
      #     docker volume prune -f

      # - name: Prepare Cache
      #   run: |
      #     mkdir -p cache
      #     echo `date` > cache/trigger.txt

      - name: main
        run: |
          bash ./action/install_docker_compose.sh
          docker-compose up --abort-on-container-exit --quiet-pull
          exit

      # ----------------------------------------------------------------

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4.6.5
        with:
          folder: output # The folder the action should deploy.

      # ----------------------------------------------------------------

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch gh-pages branch
        run: |
          git fetch origin gh-pages --depth=1
          git checkout gh-pages

      - name: Remove all history except latest commit
        run: |
          git checkout --orphan temp_branch

          git cherry-pick HEAD~1
          git cherry-pick HEAD~2

          git branch -D gh-pages
          git branch -m gh-pages

          git push --force

          # git gc --aggressive --prune=now
          
          # git push --force origin gh-pages